#!/usr/bin/env python

import argparse

import pyexcel as pe
import pyexcel.ext.xls
import pyexcel.ext.xlsx
import pyexcel.ext.ods

class grepxcel():
    def __init__(self, book_file, grepstring, separator, output_row_number,
        output_sheet_name):
        self.book_file = book_file
        self.grepstring = grepstring
        self.separator = separator
        self.output_row_number = output_row_number
        self.output_sheet_name = output_sheet_name

    def run(self):
        book = pe.load_book(book_file)

        # Iterate through all sheets in the book.
        for sheet in book.sheets.keys():
            sheet_name = book[sheet].name

            # The grep itself begins here.
            for row in book[sheet]:
                    for column in row:
                        if grepstring in column:
                            # Save the row number.
                            rownum = book[sheet].array.index(row)

                            # Output the result, based on the options set by the user.
                            if output_sheet_name:
                                print '%s:' % sheet_name,

                            if output_row_number:
                                print '%d:' % rownum,

                            if separator:
                                print separator.join(row)
                            else:
                                print ' '.join(row)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', metavar='<string>',
        help='Use <string> as separator between cells.', type=str,
        default=None)
    parser.add_argument('-r', help='Output row number.', action='store_true')
    parser.add_argument('-n', help='Output sheet name.', action='store_true')
    parser.add_argument('pattern', metavar='<pattern>',
        help='Pattern to search for.', type=str)
    parser.add_argument('file', metavar='<filename>',
        help='File to search.', type=str)

    args = parser.parse_args()

    book_file = args.file
    grepstring = args.pattern
    separator = args.s
    output_row_number = args.r
    output_sheet_name = args.n

    g = grepxcel(book_file, grepstring, separator, output_row_number,
            output_sheet_name)
    g.run()
